import { FocusRingAria } from "@react-aria/focus";
import { HoverResult, PressResult } from "@react-aria/interactions";
import * as React from "react";
type FocusHookResult = [boolean, FocusRingAria["focusProps"]];
type HoverHookResult = [boolean, HoverResult["hoverProps"]];
type PressHookResult = [boolean, PressResult["pressProps"]];
declare function useFocused(opts: {
    isTextInput?: boolean;
}): FocusHookResult;
declare function useFocusVisible(opts: {
    isTextInput?: boolean;
}): FocusHookResult;
declare function useFocusedWithin(opts: {
    isTextInput?: boolean;
}): FocusHookResult;
declare function useFocusVisibleWithin(opts: {
    isTextInput?: boolean;
}): FocusHookResult;
declare function useHover(): HoverHookResult;
declare function usePressed(): PressHookResult;
declare const TRIGGER_TO_HOOK: {
    readonly useHover: typeof useHover;
    readonly useFocused: typeof useFocused;
    readonly useFocusVisible: typeof useFocusVisible;
    readonly useFocusedWithin: typeof useFocusedWithin;
    readonly useFocusVisibleWithin: typeof useFocusVisibleWithin;
    readonly usePressed: typeof usePressed;
};
type TriggerType = keyof typeof TRIGGER_TO_HOOK;
interface TriggerOpts {
    isTextInput?: boolean;
}
/**
 * Installs argment trigger. All the useTrigger calls must use hardcoded `trigger` arg,
 * as it's not valid to install variable React hooks!
 */
export declare function useTrigger(trigger: TriggerType, opts: TriggerOpts): [boolean, React.HTMLAttributes<HTMLElement>];
export {};
